class Solution {
    int countPartitions(int[] arr, int d) {
        int MOD = 1000000007;
        int sum = 0, n = arr.length;
        for (int nm : arr) sum += nm;

        if (d > sum || (sum + d) % 2 != 0) return 0;

        int trg = (sum + d) / 2;
        int[][] dp = new int[n + 1][trg + 1];

        for (int i = 0; i <= n; i++) {
            dp[i][0] = 1;
        }

        for (int i = 1; i <= n; i++) {
            for (int j = 0; j <= trg; j++) {
                dp[i][j] = dp[i - 1][j]; 
                if (arr[i - 1] <= j) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j - arr[i - 1]]) % MOD; // include
                }
            }
        }

        return dp[n][trg];
    }
}
